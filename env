# Step 1 - Create a secret key for rails
#
# You can generate a secure one through the WebShule docker image
# with with the command
#
#   docker run --rm bigbluebutton/greenlight rake secret
#
SECRET_KEY_BASE=ad355d300b49e75cf1fb1339f9fc2bf0d1bce92186cb14f5e68f6c905824ae4eb16f61a038653774f0a5ff8ea85b9b3b8c6d2fa9fd4e8268b42c8cf51100390c
# Step 2 - Enter credentials for your BigBlueButton Server
#
# The endpoint and secret from your bigbluebutton server.  To get these values, run
# the following command on your BigBlueButton server
#
#    bbb-conf --secret
#
# and uncomment the following two variables
BIGBLUEBUTTON_ENDPOINT=http://172.16.60.27/bigbluebutton/
BIGBLUEBUTTON_SECRET=948932735d2c821dcde0a6bdd6c686b3

# Twitter Login Provider (optional)
#
#   You will need to register the app at https://apps.twitter.com/
#   For the callback URL use 'http://<your hostname:port>/auth/twitter/callback'
#   Once registered copy the ID and Secret here
#
TWITTER_ID=332117213
TWITTER_SECRET=tKYBvzVtWX7O2U0WffRwYDY6ZYzwEIN8xIYNcvmaEtJEB3QHsS

# Google Login Provider (optional)
#
#   You will need to register for at https://console.developers.google.com/apis/credentials
#   Select Oauth client ID -> web application
#   For the callback URL use 'http://<your hostname:port>/auth/google/callback'
#   Once registered copy the ID and Secret here
#
GOOGLE_OAUTH2_ID=1046208150567-bg0emk7vom3k8gr70bs6ft86kng7ku1a.apps.googleusercontent.com
GOOGLE_OAUTH2_SECRET=_kpNUNaMI-sTg8xit913OLqS

# If "true", GreenLight will register a webhook callback for each meeting
# created. This callback is called for all events that happen in the meeting,
# including the processing of its recording. These events are used to update
# the web page dynamically as things happen in the server.
# If not "true", the application will add a metadata to the meetings with this same
# callback URL. Scripts can then be added to BigBlueButton to call this callback
# URL and send specific events to GreenLight (e.g. a post publish script to warn
# the application when recordings are done).
GREENLIGHT_USE_WEBHOOKS=true

# Slack Integration (optional)
#
#   You will need to register an incoming-webhook for your slack channel
#   in order for GreenLight to post to it. You can do this by going
#   to https://slack.com/apps/A0F7XDUAZ-incoming-webhooks, selecting your
#   team and then selecting "Add Incoming WebHooks integration" on the
#   desired channel. You will then need to paste the webhook below.
#
SLACK_WEBHOOK=
SLACK_CHANNEL=

# Landing Background (optional)
#
#   Supply a URL to an image to change the landing background. If no
#   URL is provided GreenLight will use a default image. If you
#   supply a path that does not lead to an image, no landing image
#   will appear.
#
LANDING_BACKGROUND=

# SMTP Mailer
#
GREENLIGHT_MAIL_NOTIFICATIONS=true
GREENLIGHT_DOMAIN=localhost-lxc.org
SMTP_FROM=youremail@gmail.com
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_DOMAIN=gmail.com
SMTP_USERNAME=oasis.sybill@gmail.com
SMTP_PASSWORD=4deluvovsheila
# SMTP_TLS=false
# SMTP_AUTH=login
# SMTP_STARTTLS_AUTO=true

# Prefix for the application's root URL
# Useful for deploying the application to a subdirectory
#
#   default is '/b' (recommended)
#
#RELATIVE_URL_ROOT=/b
