# Step 1 - Create a secret key for rails
#
# You can generate a secure one through the Greenlight docker image
# with with the command
#
#   docker run --rm bigbluebutton/greenlight rake secret
#
SECRET_KEY_BASE=
# Step 2 - Enter credentials for your BigBlueButton Server
#
# The endpoint and secret from your bigbluebutton server.  To get these values, run
# the following command on your BigBlueButton server
#
#    bbb-conf --secret
#
# and uncomment the following two variables
#BIGBLUEBUTTON_ENDPOINT=
#BIGBLUEBUTTON_SECRET=

# Twitter Login Provider (optional)
#
#   You will need to register the app at https://apps.twitter.com/
#   For the callback URL use 'http://<your hostname:port>/auth/twitter/callback'
#   Once registered copy the ID and Secret here
#
TWITTER_ID=
TWITTER_SECRET=

# Google Login Provider (optional)
#
#   You will need to register for at https://console.developers.google.com/apis/credentials
#   Select Oauth client ID -> web application
#   For the callback URL use 'http://<your hostname:port>/auth/google/callback'
#   Once registered copy the ID and Secret here
#
GOOGLE_OAUTH2_ID=
GOOGLE_OAUTH2_SECRET=

# 24042017 - Kristof VD Ouweland LDAP login Provider (optional)
#
# Normally you have your own LDAP server running in order to provide authentication.
# Set the ID below to TRUE in case you want to use LDAP. 
# Leave it blank to keep it disabled.
# IMPORTANT! We cannot stress enough to use secure LDAP instead of LDAP. If you use LDAP, usernames and passwords can be intercepted during authentication
# Note: LDAP authenication is based on module OmnitAuth-LDAP thanks to pyu10055
# Note: https://github.com/intridea/omniauth-ldap
# IMPORTANT: Dueue to a current bug in the omniauthentication with relative urls, it is important to currently run the greenlight application with a relative url of /
# Note: https://gist.github.com/jiggneshhgohel/4a79aa26cb628533fe132295cffc45b2#gistcomment-1836286
LDAP_ACTIVE=TRUE

# If "true", GreenLight will register a webhook callback for each meeting
# created. This callback is called for all events that happen in the meeting,
# including the processing of its recording. These events are used to update
# the web page dynamically as things happen in the server.
# If not "true", the application will add a metadata to the meetings with this same
# callback URL. Scripts can then be added to BigBlueButton to call this callback
# URL and send specific events to GreenLight (e.g. a post publish script to warn
# the application when recordings are done).
GREENLIGHT_USE_WEBHOOKS=false

# Slack Integration (optional)
#
#   You will need to register an incoming-webhook for your slack channel
#   in order for GreenLight to post to it. You can do this by going
#   to https://slack.com/apps/A0F7XDUAZ-incoming-webhooks, selecting your
#   team and then selecting "Add Incoming WebHooks integration" on the
#   desired channel. You will then need to paste the webhook below.
#
SLACK_WEBHOOK=
SLACK_CHANNEL=

# Landing Background (optional)
#
#   Supply a URL to an image to change the landing background. If no
#   URL is provided GreenLight will use a default image. If you
#   supply a path that does not lead to an image, no landing image
#   will appear.
#
LANDING_BACKGROUND=

# SMTP Mailer
#
GREENLIGHT_MAIL_NOTIFICATIONS=true
GREENLIGHT_DOMAIN=testdummy.com
SMTP_FROM=dummy@dummy.com
SMTP_SERVER=smtp.dummy.com
SMTP_PORT=25
SMTP_DOMAIN=dummy.com
SMTP_USERNAME=youremail@dummy.com
SMTP_PASSWORD=yourpassword
# SMTP_TLS=false
# SMTP_AUTH=login
# SMTP_STARTTLS_AUTO=true

# Prefix for the application's root URL
# Useful for deploying the application to a subdirectory
#
#   default is '/b' (recommended)
#
RELATIVE_URL_ROOT=/b
