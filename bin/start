#!/usr/bin/env bash

PORT="${PORT:=3000}"

# Parse Rails DATABASE and REDIS urls to get host and port
pgProtocol="$(echo $DATABASE_URL | grep :// | sed -e's,^\(.*://\).*,\1,g')" # extract the protocol
pgUrl="${DATABASE_URL/$pgProtocol/}" # remove the protocol
pgUser="$(echo $pgUrl | grep @ | cut -d@ -f1)" # extract the user (if any)
pgHostport="$(echo ${pgUrl/$pgUser@/} | cut -d/ -f1)" # extract the host and port
pgHost="$(echo $pgHostport | cut -d: -f1)" # by request host without port
pgPort="$(echo $pgHostport | cut -d: -f2)" # by request - try to extract the port

rdProtocol="$(echo $REDIS_URL | grep :// | sed -e's,^\(.*://\).*,\1,g')" # extract the protocol
rdUrl="${REDIS_URL/$rdProtocol/}" # remove the protocol
rdUser="$(echo $rdUrl | grep @ | cut -d@ -f1)" # extract the user (if any)
rdHostport="$(echo ${rdUrl/$rdUser@/} | cut -d/ -f1)" # extract the host and port
rdHost="$(echo $rdHostport | cut -d: -f1)" # by request host without port
rdPort="$(echo $rdHostport | cut -d: -f2)" # by request - try to extract the port

echo "Greenlight-v3 starting on port: $PORT"

if [ "$RAILS_ENV" = "production" ]; then
  while ! nc -zw3 $pgHost $pgPort
  do
    echo "Waiting for postgres to start up ..."
    sleep 1
  done

  while ! nc -zw3 $rdHost $rdPort
  do
    echo "Waiting for redis to start up ..."
    sleep 1
  done
fi

rails assets:precompile
rails db:create
rails db:migrate:with_data

rails s -b 0.0.0.0 -p $PORT
