FROM amazonlinux:2 AS amazonlinux
SHELL ["/bin/bash", "-c"]

ARG RAILS_ROOT=/usr/src/app
ENV RAILS_ROOT=${RAILS_ROOT}

FROM amazonlinux AS amazonlinux-base
ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /sbin/tini
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc
RUN gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7
RUN gpg --batch --verify /tini.asc /sbin/tini
RUN chmod +x /sbin/tini
RUN yum -y install redhat-rpm-config
RUN yum install -y amazon-linux-extras

FROM amazonlinux-base
WORKDIR $RAILS_ROOT
# Install Node.js (needed for yarn)
RUN curl -sL https://rpm.nodesource.com/setup_16.x | bash -
RUN yum -y install nodejs
RUN yum -y install yarn gcc-c++ make libyaml-devel libffi-devel glibc-devel readline-devel openssl-devel

# Install basic packages
RUN curl -sL -o /etc/yum.repos.d/yarn.repo https://dl.yarnpkg.com/rpm/yarn.repo
RUN yum -y install git tar gzip yarn shared-mime-info libxslt zlib-devel python3 python3-pip shadow-utils python3 python3-pip shadow-utils
RUN amazon-linux-extras install postgresql13
RUN yum -y install postgresql-devel

# Install Ruby & Rails
RUN git clone https://github.com/rbenv/rbenv.git /root/.rbenv && \
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /root/.bashrc && \
    echo 'eval "$(rbenv init -)"' >> /root/.bashrc && \
    git clone https://github.com/rbenv/ruby-build.git /root/.rbenv/plugins/ruby-build && \
    /root/.rbenv/bin/rbenv install 3.3.6 && \
    /root/.rbenv/bin/rbenv global 3.3.6 && \
    /root/.rbenv/bin/rbenv rehash
ENV PATH="/root/.rbenv/shims:/root/.rbenv/bin:$PATH"
RUN gem install bundler -v '~> 2.5'

COPY . ./
RUN bundle install -j4 \
    && yarn install

ARG RAILS_ENV
ENV RAILS_ENV=${RAILS_ENV:-production}
ARG RAILS_LOG_TO_STDOUT
ENV RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT:-true}
ARG RAILS_SERVE_STATIC_FILES
ENV RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES:-true}
ARG PORT
ENV PORT=${PORT:-3000}

EXPOSE ${PORT}

ARG VERSION_TAG
ENV VERSION_TAG=$VERSION_TAG

RUN chmod +x bin/start
ENTRYPOINT [ "./bin/start" ]
